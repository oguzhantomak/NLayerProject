// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerProject.Repository;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NLayerProject.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220125191439_BarcodeIsNullable")]
    partial class BarcodeIsNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NLayerProject.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 1, 25, 19, 14, 38, 792, DateTimeKind.Utc).AddTicks(6735),
                            IsDeleted = false,
                            Name = "Taze"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 1, 25, 19, 14, 38, 792, DateTimeKind.Utc).AddTicks(6745),
                            IsDeleted = false,
                            Name = "Gıda Dışı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 1, 25, 19, 14, 38, 792, DateTimeKind.Utc).AddTicks(6746),
                            IsDeleted = false,
                            Name = "Bakliyat"
                        });
                });

            modelBuilder.Entity("NLayerProject.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "86901",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 1, 25, 19, 14, 38, 792, DateTimeKind.Utc).AddTicks(6913),
                            IsDeleted = false,
                            Name = "Marul",
                            Price = 10m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 2,
                            Barcode = "86902",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 1, 25, 19, 14, 38, 792, DateTimeKind.Utc).AddTicks(6916),
                            IsDeleted = false,
                            Name = "Askılık",
                            Price = 20m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            Barcode = "86903",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 1, 25, 19, 14, 38, 792, DateTimeKind.Utc).AddTicks(6917),
                            IsDeleted = false,
                            Name = "Yeişl Mercimek 2,5 kg",
                            Price = 15m,
                            Stock = 5
                        });
                });

            modelBuilder.Entity("NLayerProject.Core.Models.Product", b =>
                {
                    b.HasOne("NLayerProject.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayerProject.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
